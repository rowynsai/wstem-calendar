{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rowyn/Downloads/wstem/frontend/components/TaskModal.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport default function TaskModal({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  onDelete,\r\n  existingTask,\r\n}) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const subjectOptions = [\"Math\", \"CPSC\", \"Chem\", \"Biol\", \"Phys\", \"APSC\"];\r\n\r\n  useEffect(() => {\r\n    if (existingTask) {\r\n      setTitle(existingTask.summary || existingTask.title || \"\");\r\n      setDescription(existingTask.description || \"\");\r\n      setSubject(existingTask.extendedProperties?.private?.subject || \"\");\r\n\r\n      const startDateTime = existingTask.start?.dateTime || existingTask.start?.date;\r\n      const endDateTime = existingTask.end?.dateTime || existingTask.end?.date;\r\n\r\n      if (startDateTime) {\r\n        const [startDate, startTimeValue] = startDateTime.split(\"T\");\r\n        setDate(startDate);\r\n        setStartTime(startTimeValue ? startTimeValue.slice(0, 5) : \"\");\r\n      }\r\n\r\n      if (endDateTime) {\r\n        const [, endTimeValue] = endDateTime.split(\"T\");\r\n        setEndTime(endTimeValue ? endTimeValue.slice(0, 5) : \"\");\r\n      }\r\n    } else {\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setSubject(\"\");\r\n      setDate(\"\");\r\n      setStartTime(\"\");\r\n      setEndTime(\"\");\r\n    }\r\n  }, [existingTask, isOpen]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!title || !date || !startTime || !endTime) {\r\n      alert(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n\r\n    const updatedTask = {\r\n      title,           // \r\n      description,\r\n      date,            // \"YYYY-MM-DD\"\r\n      startTime,       // \"HH:mm\"\r\n      endTime,         // \"HH:mm\"\r\n      subject,         // string or empty\r\n    };\r\n\r\n    onSave(updatedTask);\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-[#fdf6e3] bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-[90%] max-w-md shadow-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4\">\r\n          {existingTask ? \"View Event Details\" : \"Add Event\"}\r\n        </h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          className=\"w-full border p-2 rounded mb-2\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          readOnly={!!existingTask}\r\n        />\r\n        {!existingTask ? (\r\n  <select\r\n    className=\"w-full border p-2 rounded mb-2\"\r\n    value={subject}\r\n    onChange={(e) => setSubject(e.target.value)}\r\n  >\r\n    <option value=\"\">Select Subject</option>\r\n    {subjectOptions.map((option) => (\r\n      <option key={option} value={option}>\r\n        {option}\r\n      </option>\r\n    ))}\r\n  </select>\r\n) : (\r\n  subject && <span className=\"text-sm text-gray-600 italic\">{subject}</span>\r\n)}\r\n\r\n\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          className=\"w-full border p-2 rounded mb-2\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          readOnly={!!existingTask}\r\n        />\r\n\r\n        <input\r\n          type=\"date\"\r\n          className=\"w-full border p-2 rounded mb-2\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          readOnly={!!existingTask}\r\n        />\r\n\r\n        <input\r\n          type=\"time\"\r\n          className=\"w-full border p-2 rounded mb-2\"\r\n          value={startTime}\r\n          onChange={(e) => setStartTime(e.target.value)}\r\n          readOnly={!!existingTask}\r\n        />\r\n\r\n        <input\r\n          type=\"time\"\r\n          className=\"w-full border p-2 rounded mb-4\"\r\n          value={endTime}\r\n          onChange={(e) => setEndTime(e.target.value)}\r\n          readOnly={!!existingTask}\r\n        />\r\n\r\n        <div className=\"flex justify-between gap-2\">\r\n          <button\r\n            className=\"bg-gray-300 text-black py-2 px-4 rounded hover:bg-gray-400\"\r\n            onClick={onClose}\r\n          >\r\n            Close\r\n          </button>\r\n\r\n          {!existingTask && (\r\n            <button\r\n              className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </button>\r\n          )}\r\n\r\n          {existingTask && onDelete && (\r\n            <button\r\n              className=\"bg-red-500 text-white py-2 px-4 rounded hover:bg-red-700\"\r\n              onClick={() => {\r\n                onDelete(existingTask);\r\n                onClose();\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rowyn/Downloads/wstem/frontend/app/calendar/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\r\nimport format from \"date-fns/format\";\r\nimport parse from \"date-fns/parse\";\r\nimport startOfWeek from \"date-fns/startOfWeek\";\r\nimport getDay from \"date-fns/getDay\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport TaskModal from \"@/components/TaskModal\";\r\nimport Link from \"next/link\";\r\n\r\nconst locales = {\r\n  \"en-US\": require(\"date-fns/locale/en-US\"),\r\n};\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales,\r\n});\r\n\r\n// subject colours\r\nconst subjectColors = {\r\n  Math: \"#f87171\",  // red\r\n  CPSC: \"#60a5fa\",  // blue\r\n  Chem: \"#ffa500\",  // orange\r\n  Biol: \"#34d399\",  // green\r\n  Phys: \"#fbbf24\",  // yellow\r\n  APSC: \"#a78bfa\",   // purple\r\n};\r\n\r\nfunction formatDateTime(isoDate) {\r\n  if (!isoDate) return \"\";\r\n  const d = new Date(isoDate);\r\n\r\n  // dd/mm/yyyy\r\n  const day = String(d.getDate()).padStart(2, \"0\");\r\n  const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n  const year = d.getFullYear();\r\n\r\n  // time formatted as hh:mm, 24 hr clock\r\n  const hours = String(d.getHours()).padStart(2, \"0\");\r\n  const minutes = String(d.getMinutes()).padStart(2, \"0\");\r\n\r\n  return `${day}/${month}/${year} ${hours}:${minutes}`;\r\n}\r\n\r\n// read-only modal for event details (no edits)\r\nfunction EventDetailsModal({ event, onClose }) {\r\n  if (!event) return null;\r\n\r\n  return (\r\n    <div\r\n      onClick={onClose}\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0, left: 0, right: 0, bottom: 0,\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        style={{ backgroundColor: \"white\", padding: \"20px\", borderRadius: \"8px\", minWidth: \"300px\" }}\r\n      >\r\n        <h2>{event.title || \"No Title\"}</h2>\r\n        <p><strong>Description:</strong> {event.description || \"No description available\"}</p>\r\n        <p><strong>Start:</strong> {formatDateTime(event.start)}</p>\r\n        <p><strong>End:</strong> {formatDateTime(event.end)}</p>\r\n        <div style={{ marginTop: \"auto\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <button onClick={onClose}>Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//dropdown subject choices\r\nfunction SubjectDropdown({ selectedSubjects, setSelectedSubjects, user }) {\r\n  const [open, setOpen] = useState(false);\r\n  const options = Object.keys(subjectColors);\r\n\r\n  const toggleSubject = (subject) => {\r\n    setSelectedSubjects((prev) => {\r\n      let updated;\r\n      if (subject === 'Select All') {\r\n        updated = prev.length === options.length ? [] : options;\r\n      } else {\r\n        updated = prev.includes(subject)\r\n          ? prev.filter((s) => s !== subject)\r\n          : [...prev, subject];\r\n      }\r\n\r\n      // if user get their saved pref and update them\r\n      if (user) {\r\n        fetch(`http://localhost:5000/api/preferences`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            userId: user._id,\r\n            preferences: { subjects: updated },\r\n          }),\r\n        }).catch((err) => console.error(\"Failed to save preferences\", err));\r\n      }\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const isChecked = (subject) =>\r\n    subject === 'Select All'\r\n      ? selectedSubjects.length === options.length\r\n      : selectedSubjects.includes(subject);\r\n\r\n  return (\r\n    <div className=\"relative inline-block text-left z-50\">\r\n      <div>\r\n        <button\r\n          onClick={() => setOpen((prev) => !prev)}\r\n          className=\"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 text-sm font-medium text-white hover:bg-blue-900 focus:outline-none\"\r\n          style={{ backgroundColor: '#3174ad' }}\r\n        >\r\n          Subjects\r\n        </button>\r\n      </div>\r\n\r\n      {open && (\r\n        <div className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n          <div className=\"py-1\">\r\n            <label className=\"flex items-center px-4 py-2 text-sm text-gray-700\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"mr-2\"\r\n                checked={isChecked('Select All')}\r\n                onChange={() => toggleSubject('Select All')}\r\n              />\r\n              Select All\r\n            </label>\r\n            {options.map((option) => (\r\n              <label\r\n                key={option}\r\n                className=\"flex items-center px-4 py-2 text-sm text-gray-700\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"mr-2\"\r\n                  checked={isChecked(option)}\r\n                  onChange={() => toggleSubject(option)}\r\n                />\r\n                <span\r\n                  className=\"inline-block w-3 h-3 rounded-full mr-2\"\r\n                  style={{ backgroundColor: subjectColors[option] }}\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CalendarPage() {\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false); // for Add Event (admin only)\r\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false); // for read-only event details\r\n  const [user, setUser] = useState(null);\r\n  const [selectedSubjects, setSelectedSubjects] = useState([\"Math\", \"CPSC\", \"Chem\", \"Biol\", \"Phys\", \"APSC\"]);\r\n  const profileLink = user ? \"/profile\" : \"/register\";\r\n\r\n  // helps w null (no subject) case\r\n  const filteredEvents = events.filter(\r\n    (event) =>\r\n      selectedSubjects.length === 0 || // show all if none selected\r\n      !event.subject ||               // events without subject always shown\r\n      selectedSubjects.includes(event.subject)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchUserAndEvents = async () => {\r\n      const storedUser = localStorage.getItem(\"user\");\r\n      let userPrefs = null;\r\n  \r\n      if (storedUser && storedUser !== \"undefined\") {\r\n        try {\r\n          const parsedUser = JSON.parse(storedUser);\r\n          setUser(parsedUser);\r\n  \r\n          if (parsedUser.preferences?.subjects) {\r\n            setSelectedSubjects(parsedUser.preferences.subjects);\r\n            userPrefs = parsedUser.preferences.subjects;\r\n          }\r\n\r\n        } catch (err) {\r\n          console.error(\"Error parsing user from localStorage:\", err);\r\n          localStorage.removeItem(\"user\");\r\n        }\r\n      }\r\n  \r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/calendar\");\r\n        const data = await response.json();\r\n  \r\n        if (Array.isArray(data.events)) {\r\n          const formattedEvents = data.events.map((event) => ({\r\n            id: event.id,\r\n            title: event.summary || event.title || \"No Title\",\r\n            start: new Date(event.start?.dateTime || event.start?.date || new Date()),\r\n            end: new Date(event.end?.dateTime || event.end?.date || new Date()),\r\n            description: event.description || \"\",\r\n            subject: event.extendedProperties?.private?.subject || null,\r\n          }));\r\n          setEvents(formattedEvents);\r\n        } else {\r\n          setEvents([]);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch events:\", err);\r\n        setEvents([]);\r\n      }\r\n    };\r\n  \r\n    fetchUserAndEvents();\r\n  }, []);\r\n  \r\n\r\n  const handleSaveTask = async (task) => {\r\n    console.log(\"handleSaveTask triggered\", task);\r\n    try {\r\n      const postData = {\r\n        title: task.summary || task.title || \"No Title\",\r\n        description: task.description || \"\",\r\n        date: task.date,\r\n        startTime: task.startTime, // \"14:30\"\r\n        endTime: task.endTime,     // \"15:30\"\r\n        subject: task.subject || null, // TODO check taskModal\r\n        user: user?.id || null,\r\n      };\r\n\r\n      const response = await fetch(\"http://localhost:5000/api/calendar\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(postData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.newEvent) {\r\n        const newEvent = {\r\n          id: data.newEvent.id,\r\n          title: data.newEvent.summary || data.newEvent.title || \"No Title\",\r\n          start: new Date(data.newEvent.start?.dateTime || data.newEvent.start?.date || new Date()),\r\n          end: new Date(data.newEvent.end?.dateTime || data.newEvent.end?.date || new Date()),\r\n          description: data.newEvent.description || \"\",\r\n          subject: data.newEvent.extendedProperties?.private?.subject || null,\r\n        };\r\n        setEvents((prev) => [...prev, newEvent]);\r\n      }\r\n\r\n      //get emails from inbox\r\n      await fetch('/api/email/scan', { method: 'POST' });\r\n    } catch (err) {\r\n      console.error(\"Failed to save task:\", err);\r\n    }\r\n  };\r\n\r\n  // Clicking on event shows read-only details modal\r\n  const handleSelectEvent = (event) => {\r\n    setSelectedEvent(event);\r\n    setIsDetailsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen bg-[#fdf6e3] text-black font-[family-name:var(--font-geist-sans)] px-6 pt-6 pb-6\">\r\n      <Link href=\"/\" className=\"absolute left-0 top-0 cursor-pointer\">\r\n        <img\r\n          src=\"/wstemlogo.png\"\r\n          alt=\"Home\"\r\n          width={175}\r\n          height={100}\r\n          className=\"object-contain\"\r\n        />\r\n      </Link>\r\n\r\n      <main className=\"p-6 sm:p-12 max-w-4xl mx-auto mt-20 bg-white/70 rounded-2xl shadow-xl backdrop-blur-sm\">\r\n        <div className=\"flex justify-between items-center mb-4 relative\">\r\n        <a href={profileLink} className=\"absolute left-0\">\r\n          <img src=\"/profile.svg\" alt=\"profile icon\" className=\"w-10 h-10\" />\r\n        </a>\r\n\r\n          <h1 className=\"text-2xl font-bold text-center w-full\">Women in STEM Events</h1>\r\n\r\n          <div className=\"absolute right-0\">\r\n            <SubjectDropdown\r\n              selectedSubjects={selectedSubjects}\r\n              setSelectedSubjects={setSelectedSubjects}\r\n              user={user}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"border border-gray-300 rounded overflow-hidden\">\r\n          <Calendar\r\n            localizer={localizer}\r\n            events={filteredEvents}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 600 }}\r\n            views={[\"month\", \"week\", \"day\"]}\r\n            defaultView=\"month\"\r\n            onSelectEvent={handleSelectEvent}\r\n            eventPropGetter={(event) => {\r\n              let bgColor = \"#3174ad\"; // default blue\r\n\r\n              switch (event.subject) {\r\n                case \"Math\":\r\n                  bgColor = \"#f87171\"; // red\r\n                  break;\r\n                case \"CPSC\":\r\n                  bgColor = \"#60a5fa\"; // blue\r\n                  break;\r\n                case \"Chem\":\r\n                  bgColor = \"#ffa500\";  // orange\r\n                  break;\r\n                case \"Biol\":\r\n                  bgColor = \"#34d399\"; // green\r\n                  break;\r\n                case \"Phys\":\r\n                  bgColor = \"#fbbf24\"; // yellow\r\n                  break;\r\n                case \"APSC\":\r\n                  bgColor = \"#a78bfa\"; // purple\r\n                  break;\r\n              }\r\n\r\n              return {\r\n                style: {\r\n                  backgroundColor: bgColor,\r\n                  borderRadius: \"6px\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  padding: \"4px 8px\",\r\n                },\r\n              };\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {user?.isAdmin === true && (\r\n          <div className=\"mt-6 flex justify-center\">\r\n            <button\r\n              className=\"rounded-full bg-sky-400 text-white py-2 px-4 hover:bg-blue-700\"\r\n              onClick={() => setIsTaskModalOpen(true)}\r\n            >\r\n              Add Event\r\n            </button>\r\n          </div>\r\n        )}\r\n      </main>\r\n\r\n      {isDetailsModalOpen && (\r\n        <EventDetailsModal\r\n          event={selectedEvent}\r\n          onClose={() => {\r\n            setIsDetailsModalOpen(false);\r\n            setSelectedEvent(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {isTaskModalOpen && (\r\n        <TaskModal\r\n          isOpen={isTaskModalOpen}\r\n          onClose={() => setIsTaskModalOpen(false)}\r\n          onSave={handleSaveTask}\r\n          existingTask={selectedEvent}\r\n        />\r\n      )}\r\n\r\n      <footer className=\"mt-12 flex justify-center\">\r\n        <a\r\n          className=\"absolute top-10 right-7 nter gap-2 hover:underline hover:underline-offset-4 text-md\"\r\n          href=\"https://qualtricsxmrt5r3gxmc.qualtrics.com/jfe/form/SV_6Vwj1rfNTJLSXA2\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Suggest an event / newsletter !\r\n        </a>\r\n      </footer>\r\n\r\n      <footer className=\"mt-12 flex justify-center\">\r\n      <a\r\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4 text-sm px-6\"\r\n          href=\"/about\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src=\"/file.svg\" alt=\"Globe icon\" className=\"w-4 h-4\" />\r\n          About us\r\n          </a>\r\n\r\n        <a\r\n          className=\"flex center nter gap-2 hover:underline hover:underline-offset-4 text-sm\"\r\n          href=\"mailto:rowynsai+calendar@gmail.com?subject=UBC Women in STEM Calendar\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src=\"/globe.svg\" alt=\"Globe icon\" className=\"w-4 h-4\" />\r\n          Contact us !\r\n        </a>\r\n      </footer>\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}