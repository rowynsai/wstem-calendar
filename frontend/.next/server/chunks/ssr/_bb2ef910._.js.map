{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rowyn/Downloads/wstem/frontend/app/calendar/page.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport TaskModal from \"./TaskModal\";\r\nimport { useUser } from \"@clerk/clerk-react\";\r\nimport { getEvents, createEvent } from \"../api/calendar\";\r\nimport FilterDropdown from \"./FilterDropdown\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarPage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const { user } = useUser();\r\n\r\n  const defaultSubjects = [\"Math\", \"CPSC\", \"Chem\", \"Phys\", \"Eng\"];\r\n  const [selectedSubjects, setSelectedSubjects] = useState(defaultSubjects);\r\n\r\n  const fetchEvents = async () => {\r\n    const fetchedEvents = await getEvents();\r\n    setEvents(fetchedEvents);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  // ✅ Restore selectedSubjects from localStorage on first load\r\n  useEffect(() => {\r\n    const storedSubjects = localStorage.getItem(\"selectedSubjects\");\r\n    if (storedSubjects) {\r\n      try {\r\n        const parsed = JSON.parse(storedSubjects);\r\n        if (Array.isArray(parsed)) {\r\n          setSelectedSubjects(parsed);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to parse selectedSubjects from localStorage\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Persist selectedSubjects to localStorage when it changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"selectedSubjects\", JSON.stringify(selectedSubjects));\r\n  }, [selectedSubjects]);\r\n\r\n  const handleSelectEvent = (event) => {\r\n    setSelectedEvent(event);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleSelectSlot = ({ start, end }) => {\r\n    if (!user || user.username !== \"admin\") return;\r\n\r\n    setSelectedEvent({ start, end });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    await createEvent(event);\r\n    setIsModalOpen(false);\r\n    fetchEvents();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const filteredEvents = events.filter((event) => {\r\n    return !event.subject || selectedSubjects.includes(event.subject);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-4\">\r\n        <FilterDropdown\r\n          selectedSubjects={selectedSubjects}\r\n          setSelectedSubjects={setSelectedSubjects}\r\n        />\r\n      </div>\r\n      <div className=\"h-[800px]\">\r\n        <Calendar\r\n          localizer={localizer}\r\n          events={filteredEvents}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          onSelectEvent={handleSelectEvent}\r\n          selectable={user && user.username === \"admin\"}\r\n          onSelectSlot={handleSelectSlot}\r\n        />\r\n      </div>\r\n      {isModalOpen && (\r\n        <TaskModal\r\n          event={selectedEvent}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAM,YAAY,CAAA,GAAA,mLAAA,CAAA,kBAAe,AAAD,EAAE,gIAAA,CAAA,UAAM;AAExC,MAAM,eAAe;IACnB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACvC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,EAAE,IAAI,EAAE,GAAG;IAEjB,MAAM,kBAAkB;QAAC;QAAQ;QAAQ;QAAQ;QAAQ;KAAM;IAC/D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,cAAc;QAClB,MAAM,gBAAgB,MAAM;QAC5B,UAAU;IACZ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,6DAA6D;IAC7D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB,aAAa,OAAO,CAAC;QAC5C,IAAI,gBAAgB;YAClB,IAAI;gBACF,MAAM,SAAS,KAAK,KAAK,CAAC;gBAC1B,IAAI,MAAM,OAAO,CAAC,SAAS;oBACzB,oBAAoB;gBACtB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sDAAsD;YACtE;QACF;IACF,GAAG,EAAE;IAEL,6DAA6D;IAC7D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;IAC1D,GAAG;QAAC;KAAiB;IAErB,MAAM,oBAAoB,CAAC;QACzB,iBAAiB;QACjB,eAAe;IACjB;IAEA,MAAM,mBAAmB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;QACtC,IAAI,CAAC,QAAQ,KAAK,QAAQ,KAAK,SAAS;QAExC,iBAAiB;YAAE;YAAO;QAAI;QAC9B,eAAe;IACjB;IAEA,MAAM,aAAa,OAAO;QACxB,MAAM,YAAY;QAClB,eAAe;QACf;IACF;IAEA,MAAM,eAAe;QACnB,eAAe;IACjB;IAEA,MAAM,iBAAiB,OAAO,MAAM,CAAC,CAAC;QACpC,OAAO,CAAC,MAAM,OAAO,IAAI,iBAAiB,QAAQ,CAAC,MAAM,OAAO;IAClE;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,kBAAkB;oBAClB,qBAAqB;;;;;;;;;;;0BAGzB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mLAAA,CAAA,WAAQ;oBACP,WAAW;oBACX,QAAQ;oBACR,eAAc;oBACd,aAAY;oBACZ,eAAe;oBACf,YAAY,QAAQ,KAAK,QAAQ,KAAK;oBACtC,cAAc;;;;;;;;;;;YAGjB,6BACC,8OAAC;gBACC,OAAO;gBACP,QAAQ;gBACR,UAAU;;;;;;;;;;;;AAKpB;uCAEe","debugId":null}}]
}